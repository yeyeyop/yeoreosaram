//excuteUpdate는 리턴타입이 int, 때문에 메서드 리턴타입을 int로 설정
// why? => insert, delete, update 실제 처리할 건수를 처리함 
//참고) select에서만 쓰이는 것 excuteQuery, 리턴타입은 resultSet 
//=> rs=pstmt.executeQuery();

 //preparedStatement는 물음표 값에 넣는 거라
//set할 때도, 물음표 수만큼 값을 넣어줘야 한다

//StringBuilder 기존 꺼 있는 내용에서 붙여주는 내용 
// String을 쓰지 않는 건,  새로운 게 나올 때마다 다시 생성하기 때문 => 메모리 과소비 


- 동기 방식 : 일을 순서대로 한다 만약, 중간에 뭐가 있으면 거기서 머문다
* 결과가 주어질 때까지 아무것도 못하고 대기해야 하는 단점이 있다
- 비동기 : 위에서 아래로 실행을 하는데, 중간에 실행할 게 있으면 결과는 알아서 오고, 밑에 꺼 계속 실행
* 결과가 주어지는데 시간이 걸리더라도 그 시간 동안 다른 작업을 할 수 있으므로 자원을 효율적으로 사용 가능

<jsbc 대략의 질문 내용>
Statement를 사용하면 매번 쿼리를 수행할 때마다 1) ~ 3) 단계를 거치게 되고, 
- 실행할 때마다 컴파일
PreparedStatement는 처음 한 번만 세 단계를 거친 후 캐시에 담아 재사용을 한다는 것이다.
- 처음 실행할 때 한 번 컴파일, 물음표에 값만 바꾼다
상속 - statement를 상속 받는다

executeQuery()
- Select문을 사용할 때 사용 
- 리턴값 : ResultSet
* 왜? Select문의 데이터 건수는 레코드 값인데, 그걸 받아야하기 때문
executeUpdate()
- Insert, Delete, Update문을 실행할 때 사용 
- 리턴값 :  int

close 꼭 시켜야 함 이걸로 인해 자원 반납!

dbcp : 
DBCP(Database Connection Pool)은 HTTP 요청에 매번 위의 1-5의 단계를 거치치 않기 위한 방법이다. 

브라우저에서 내 꺼 정보를 보내는 것 그리고 서버에게 요청하는 것 : request
서버에서 클라이언트 너 꺼 정보까지 이렇이렇게 해서 보내준다~ : response

<필터>
로그인이 되어야만 게시판이든 뭐든 사용할 수 있는 브라우저로 이동이 가능함
board/list.jsp 라 치면 원래 만들었던 게시판 화면이 아니라,  로그인 화면으로 나옴


writeProc 글쓰고 저장을 하고 나서 타는 페이지

